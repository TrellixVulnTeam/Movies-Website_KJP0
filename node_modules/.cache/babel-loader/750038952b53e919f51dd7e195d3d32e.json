{"ast":null,"code":"const api_key = '2dc9a9ee49a9191b5b1a629fa423fe71';\nconst base_url = \"https://api.themoviedb.org/3\";\n\nasync function makeGetRequest(endpoint) {\n  const requestConfig = {\n    method: 'get'\n  };\n  var response = await fetch(endpoint, requestConfig);\n  return response;\n}\n\nexport function getVideos(movie_id = 8392) {\n  const url = `${base_url}/movie/${movie_id}/videos?api_key=${api_key}`;\n  var result = fetch(url, {\n    method: 'get'\n  }).then(response => response.json()).catch(error => console.error(error));\n  return result;\n}\nexport async function getDetails(movie_id = 8392) {\n  try {\n    const endpoint = `${base_url}/movie/${movie_id}?api_key=${api_key}`;\n    return await makeGetRequest(endpoint);\n  } catch (error) {\n    console.warn(error);\n  }\n}\nexport async function getManyDetails(movies_ids) {\n  try {\n    var responses;\n\n    if (movies_ids.length > 1) {\n      responses = await Promise.all(movies_ids.map(async movie => {\n        const result = await getDetails(movie.id);\n        return result;\n      }));\n    } else {\n      const result = await getDetails(movies_ids.id);\n      return result;\n    }\n\n    return responses;\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function getUpcomming() {\n  try {\n    const endpoint = `${base_url}movie/upcoming?api_key=${api_key}`;\n    return await makeGetRequest(endpoint);\n  } catch (error) {\n    console.warn(error);\n  }\n}\nexport async function getCredits(movie_id = 8392) {\n  try {\n    const endpoint = `${base_url}/movie/${movie_id}/credits?api_key=${api_key}`;\n    return await makeGetRequest(endpoint);\n  } catch (error) {\n    console.warn(error);\n  }\n}\nexport async function getTrending(time_window = 'week', type = 'movie') {\n  try {\n    const url = `${base_url}/trending/${type}/${time_window}?api_key=${api_key}`;\n    return await makeGetRequest(url);\n  } catch (error) {\n    console.warn(error);\n  }\n}\nexport async function findMovie(searchQuery) {\n  try {\n    const url = `${base_url}/search/movie?query=${searchQuery}&api_key=${api_key}`;\n    return await makeGetRequest(url);\n  } catch (error) {\n    console.warn(error);\n  }\n}","map":{"version":3,"sources":["D:/MovieApp/src/Services/apicontroller.js"],"names":["api_key","base_url","makeGetRequest","endpoint","requestConfig","method","response","fetch","getVideos","movie_id","url","result","then","json","catch","error","console","getDetails","warn","getManyDetails","movies_ids","responses","length","Promise","all","map","movie","id","err","log","getUpcomming","getCredits","getTrending","time_window","type","findMovie","searchQuery"],"mappings":"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","sourcesContent":["\r\nconst api_key = '2dc9a9ee49a9191b5b1a629fa423fe71';\r\nconst base_url = \"https://api.themoviedb.org/3\"\r\n\r\nasync function makeGetRequest(endpoint) {\r\n    const requestConfig = { method: 'get' }\r\n    var response = await fetch(endpoint, requestConfig)\r\n    return response;\r\n}\r\n\r\nexport function getVideos(movie_id = 8392) {\r\n    const url = `${base_url}/movie/${movie_id}/videos?api_key=${api_key}`\r\n    var result = fetch(url, { method: 'get' })\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error))\r\n    return result;\r\n}\r\n\r\nexport async function getDetails(movie_id = 8392) {\r\n    try {\r\n        const endpoint = `${base_url}/movie/${movie_id}?api_key=${api_key}`;\r\n        return await makeGetRequest(endpoint)\r\n    } catch (error) { console.warn(error) }\r\n}\r\nexport async function getManyDetails(movies_ids) {\r\n    try {\r\n        var responses;\r\n        if (movies_ids.length > 1) {\r\n            responses = await Promise.all(movies_ids.map(async movie => {\r\n                const result = await getDetails(movie.id)\r\n                return result\r\n            }))\r\n        } else {\r\n            const result = await getDetails(movies_ids.id)\r\n\r\n            return result\r\n        }\r\n        return responses\r\n    } catch (err) { console.log(err) }\r\n}\r\n\r\nexport async function getUpcomming() {\r\n    try {\r\n        const endpoint = `${base_url}movie/upcoming?api_key=${api_key}`;\r\n        return await makeGetRequest(endpoint)\r\n    } catch (error) { console.warn(error) }\r\n}\r\n\r\nexport async function getCredits(movie_id = 8392) {\r\n    try {\r\n        const endpoint = `${base_url}/movie/${movie_id}/credits?api_key=${api_key}`\r\n        return await makeGetRequest(endpoint)\r\n    } catch (error) { console.warn(error) }\r\n}\r\n\r\nexport async function getTrending(time_window = 'week', type = 'movie') {\r\n    try {\r\n        const url = `${base_url}/trending/${type}/${time_window}?api_key=${api_key}`\r\n        return await makeGetRequest(url)\r\n    } catch (error) { console.warn(error) }\r\n}\r\n\r\nexport async function findMovie(searchQuery) {\r\n    try {\r\n        const url = `${base_url}/search/movie?query=${searchQuery}&api_key=${api_key}`\r\n        return await makeGetRequest(url)\r\n    } catch (error) { console.warn(error) }\r\n}"]},"metadata":{},"sourceType":"module"}